{"map":"{\"version\":3,\"sources\":[\"/home/laboratoriad043/Desktop/Laboratoria/Burger-Queen/burger-queen/src/waiter/Menu.js\",\"/home/laboratoriad043/Desktop/Laboratoria/Burger-Queen/burger-queen/src/home/Home.js\",\"/home/laboratoriad043/Desktop/Laboratoria/Burger-Queen/burger-queen/src/home/Particles.js\",\"/home/laboratoriad043/Desktop/Laboratoria/Burger-Queen/burger-queen/src/App.js\",\"/home/laboratoriad043/Desktop/Laboratoria/Burger-Queen/burger-queen/src/serviceWorker.js\",\"/home/laboratoriad043/Desktop/Laboratoria/Burger-Queen/burger-queen/src/index.js\",\"/home/laboratoriad043/Desktop/Laboratoria/Burger-Queen/burger-queen/node_modules/url-loader/dist/cjs.js??ref--6-oneOf-0!/home/laboratoriad043/Desktop/Laboratoria/Burger-Queen/burger-queen/src/home/burger-queen-logo.jpg\"],\"names\":[\"ComponentMenu\",\"react_default\",\"a\",\"createElement\",\"Fragment\",\"type\",\"className\",\"Component\",\"ComponentHome\",\"alt\",\"src\",\"logo\",\"width\",\"height\",\"ComponentParticles\",\"particles_default\",\"params\",\"particles\",\"shape\",\"line_linked\",\"shadow\",\"enable\",\"color\",\"blur\",\"style\",\"backgroundColor\",\"App\",\"Particles\",\"Home\",\"Menu\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App_0\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\",\"module\",\"exports\",\"__webpack_require__\",\"p\"],\"mappings\":\"wRAceA,mLATP,OACIC,EAAAC,EAAAC,cAACF,EAAAC,EAAME,SAAP,KACDH,EAAAC,EAAAC,cAAA,SAAA,CAAQE,KAAK,SAASC,UAAU,mBAAhC,oBAJiBC,EAAAA,2BCabC,0LAVP,OACJP,EAAAC,EAAAC,cAAA,MAAA,CAAKG,UAAU,OACfL,EAAAC,EAAAC,cAAA,MAAA,CAAKG,UAAU,QACXL,EAAAC,EAAAC,cAAA,MAAA,CAAKM,IAAI,OAAOH,UAAU,OAAOI,IAAKC,EAAAA,EAAMC,MAAM,KAAKC,OAAO,gBAL1CN,EAAAA,4BC2BbO,mLA1BP,OACIb,EAAAC,EAAAC,cAACY,EAAAb,EAAD,CACAc,OAAQ,CACFC,UAAW,CACTC,MAAO,CACHb,KAAM,SAERc,YAAa,CACTC,OAAQ,CACJC,QAAQ,EACRC,MAAO,UACPC,KAAM,MAKxBC,MAAO,CACLZ,MAAO,OACPa,gBAAiB,kBApBElB,EAAAA,WCelBmB,0LAVT,OACIzB,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACIH,EAAAC,EAAAC,cAACwB,EAAD,MACA1B,EAAAC,EAAAC,cAACyB,EAAD,MACA3B,EAAAC,EAAAC,cAAC0B,EAAD,cANItB,EAAAA,YCMEuB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,EAAAA,EAASC,OAAOnC,EAAAC,EAAAC,cAACkC,EAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,kCEnInBC,EAAAC,QAAiBC,EAAAC,EAAuB\",\"sourcesContent\":[\"import React, {Component} from 'react';\\n\\n\\nclass ComponentMenu extends Component{\\n    render(){\\n        return (\\n            <React.Fragment>\\n           <button type=\\\"button\\\" className=\\\"btn btn-primary\\\">Praaaray</button>\\n\\n            </React.Fragment>\\n        );\\n    }\\n}    \\n\\nexport default ComponentMenu;\",\"import React, {Component} from 'react';\\nimport logo from './burger-queen-logo.jpg';\\nimport './home.css';\\n\\nclass ComponentHome extends Component{\\n    render(){\\n        return (\\n    <div className=\\\"row\\\">\\n    <div className=\\\"logo\\\">\\n        <img alt=\\\"logo\\\" className=\\\"logo\\\" src={logo} width=\\\"75\\\" height=\\\"70\\\" />\\n    </div>\\n    </div>    \\n        );\\n    }\\n}    \\n\\nexport default ComponentHome;\",\"import React, {Component} from 'react';\\nimport Particles from 'react-particles-js';\\n \\nclass ComponentParticles extends Component{\\n    render(){\\n        return (\\n            <Particles \\n            params={{\\n                  particles: {\\n                    shape: {\\n                        type: 'stars',\\n                    },\\n                      line_linked: {\\n                          shadow: {\\n                              enable: true,\\n                              color: \\\"#3CA9D1\\\",\\n                              blur: 5\\n                          }\\n                      }\\n                  }\\n              }}\\n            style={{\\n              width: '100%',\\n              backgroundColor: 'black'\\n            }}\\n          />\\n        );\\n    };\\n \\n}\\n\\nexport default ComponentParticles;\",\"import React, {Component} from 'react';\\nimport ComponentMenu from './waiter/Menu.js'\\nimport ComponentHome from './home/Home.js'\\nimport ComponentParticles from './home/Particles.js'\\nimport './App.css';\\n\\nclass App extends Component {\\n  render(){\\n      return (  \\n          <>\\n              <ComponentParticles/>\\n              <ComponentHome/> \\n              <ComponentMenu/>       \\n          </> \\n      );\\n  }\\n}\\n\\nexport default App;\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import \\\"bootstrap/dist/css/bootstrap.css\\\";\\nimport React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: https://bit.ly/CRA-PWA\\nserviceWorker.unregister();\\n\",\"module.exports = __webpack_public_path__ + \\\"static/media/burger-queen-logo.cdc0f111.jpg\\\";\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{10:function(e,t,n){e.exports=n(23)},17:function(e,t,n){},18:function(e,t,n){},22:function(e,t,n){},23:function(e,t,n){\"use strict\";n.r(t);n(11);var a=n(0),r=n.n(a),c=n(7),o=n.n(c),i=(n(17),n(1)),l=n(2),u=n(4),s=n(3),b=n(5),m=function(e){function t(){return Object(i.a)(this,t),Object(u.a)(this,Object(s.a)(t).apply(this,arguments))}return Object(b.a)(t,e),Object(l.a)(t,[{key:\"render\",value:function(){return r.a.createElement(r.a.Fragment,null,r.a.createElement(\"button\",{type:\"button\",className:\"btn btn-primary\"},\"Praaaray\"))}}]),t}(a.Component),p=n(8),h=n.n(p),d=(n(18),function(e){function t(){return Object(i.a)(this,t),Object(u.a)(this,Object(s.a)(t).apply(this,arguments))}return Object(b.a)(t,e),Object(l.a)(t,[{key:\"render\",value:function(){return r.a.createElement(\"div\",{className:\"row\"},r.a.createElement(\"div\",{className:\"logo\"},r.a.createElement(\"img\",{alt:\"logo\",className:\"logo\",src:h.a,width:\"75\",height:\"70\"})))}}]),t}(a.Component)),j=n(9),f=n.n(j),O=function(e){function t(){return Object(i.a)(this,t),Object(u.a)(this,Object(s.a)(t).apply(this,arguments))}return Object(b.a)(t,e),Object(l.a)(t,[{key:\"render\",value:function(){return r.a.createElement(f.a,{params:{particles:{shape:{type:\"stars\"},line_linked:{shadow:{enable:!0,color:\"#3CA9D1\",blur:5}}}},style:{width:\"100%\",backgroundColor:\"black\"}})}}]),t}(a.Component),w=(n(22),function(e){function t(){return Object(i.a)(this,t),Object(u.a)(this,Object(s.a)(t).apply(this,arguments))}return Object(b.a)(t,e),Object(l.a)(t,[{key:\"render\",value:function(){return r.a.createElement(r.a.Fragment,null,r.a.createElement(O,null),r.a.createElement(d,null),r.a.createElement(m,null))}}]),t}(a.Component));Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));o.a.render(r.a.createElement(w,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})},8:function(e,t,n){e.exports=n.p+\"static/media/burger-queen-logo.cdc0f111.jpg\"}},[[10,1,2]]]);","extractedComments":[]}