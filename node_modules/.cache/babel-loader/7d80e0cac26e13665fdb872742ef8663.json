{"ast":null,"code":"var _jsxFileName = \"/home/laboratoriad043/Desktop/Laboratoria/Burger-Queen/burger-queen/src/menu/lunch.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport './menu.css';\nconst url = 'https://raw.githubusercontent.com/aleisabl/Burger-Queen/take-order/burger-queen/src/menu/burger-queen.json';\n\nclass ComponentLunch extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      Lunch: [],\n      isLoading: true,\n      errors: null\n    };\n  }\n\n  // Now we're going to make a request for data using axios\n  getLunch() {\n    axios // This is where the data is hosted\n    .get(url) // Once we get a response and store data, let's change the loading state\n    .then(response => {\n      this.setState({\n        Lunch: response.data.Hamburguesas,\n        Extras: response.data.Hamburguesas.extras,\n        isLoading: false\n      });\n    }) // If we catch any errors connecting, let's update accordingly\n    .catch(error => this.setState({\n      error,\n      isLoading: false\n    }));\n  } // Let's our app know we're ready to render the data\n\n\n  componentDidMount() {\n    this.getLunch();\n  } // Putting that data to use\n\n\n  render() {\n    const _this$state = this.state,\n          isLoading = _this$state.isLoading,\n          Lunch = _this$state.Lunch,\n          Extras = _this$state.Extras;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, !isLoading ? Lunch.map(lunch => {\n      const _id = lunch._id,\n            name = lunch.name,\n            price = lunch.price,\n            type = lunch.type,\n            img = lunch.img;\n      return React.createElement(\"div\", {\n        key: _id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, name), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Precio: $\", price), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Tipo: \", type[0], \",\", type[1], \",\", type[2]), React.createElement(\"img\", {\n        src: img,\n        alt: \"icon\",\n        width: \"20px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }));\n    }) : React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Loading...\"), !isLoading ? Extras.map(extras => {\n      const _id = extras._id,\n            name = extras.name,\n            price = extras.price,\n            type = extras.type,\n            img = extras.img;\n      return React.createElement(\"div\", {\n        key: _id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, name), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Precio: $\", price), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Tipo: \", type[0], \",\", type[1], \",\", type[2]), React.createElement(\"img\", {\n        src: img,\n        alt: \"icon\",\n        width: \"20px\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }));\n    }) : React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, \"Loading...\")));\n  }\n\n}\n\nexport default ComponentLunch;","map":{"version":3,"sources":["/home/laboratoriad043/Desktop/Laboratoria/Burger-Queen/burger-queen/src/menu/lunch.js"],"names":["React","Component","axios","url","ComponentLunch","state","Lunch","isLoading","errors","getLunch","get","then","response","setState","data","Hamburguesas","Extras","extras","catch","error","componentDidMount","render","map","lunch","_id","name","price","type","img"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\nimport './menu.css';\n\nconst url = 'https://raw.githubusercontent.com/aleisabl/Burger-Queen/take-order/burger-queen/src/menu/burger-queen.json';\n\nclass ComponentLunch extends Component {\n // State will apply to the Lunch object which is set to loading by default\n  state = {\n    Lunch: [],\n    isLoading: true,\n    errors: null\n  };\n  // Now we're going to make a request for data using axios\n  getLunch() {\n    axios\n      // This is where the data is hosted\n      .get(url)\n      // Once we get a response and store data, let's change the loading state\n      .then(response => {\n        this.setState({\n          Lunch: response.data.Hamburguesas,\n          Extras: response.data.Hamburguesas.extras,\n          isLoading: false\n        });\n      })\n      // If we catch any errors connecting, let's update accordingly\n      .catch(error => this.setState({ error, isLoading: false }));\n  }\n  // Let's our app know we're ready to render the data\n  componentDidMount() {\n    this.getLunch();\n  }\n  // Putting that data to use\n  render() {\n    const { isLoading, Lunch, Extras } = this.state;\n    return (\n      <React.Fragment>\n        <div>\n          {!isLoading ? (\n            Lunch.map(lunch => {\n              const { _id, name, price, type, img } = lunch;\n              return (\n                <div key={_id}>\n                  <h6>{name}</h6>\n                  <p>Precio: ${price}</p>\n                  <p>Tipo: {type[0]},{type[1]},{type[2]}</p>\n                  <img src={img} alt=\"icon\" width=\"20px\"></img>\n                  <hr />\n                </div>\n              );\n            })\n          ) : (\n            <p>Loading...</p>\n          )}\n\n            {!isLoading ? (\n            Extras.map(extras => {\n              const { _id, name, price, type, img } = extras;\n              return (\n                <div key={_id}>\n                  <h6>{name}</h6>\n                  <p>Precio: ${price}</p>\n                  <p>Tipo: {type[0]},{type[1]},{type[2]}</p>\n                  <img src={img} alt=\"icon\" width=\"20px\"></img>\n                  <hr />\n                </div>\n              );\n            })\n          ) : (\n            <p>Loading...</p>\n          )}\n\n\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default ComponentLunch"]},"metadata":{},"sourceType":"module"}