{"ast":null,"code":"import React, { Component } from 'react';\nimport axios from 'axios';\nimport './menu.css';\nconst url = 'https://raw.githubuserprice.com/aleisabl/Burger-Queen/take-order/burger-queen/src/menu/burger-queen.json';\n\nclass ComponentData extends Component {\n  /*  // State will apply to the Breakfast object which is set to loading by default\n   state = {\n     Breakfast: [],\n     isLoading: true,\n     errors: null\n   };\n   // Now we're going to make a request for data using axios\n   getBreakfast() {\n     axios\n       // This is where the data is hosted\n       .get(url)\n       // Once we get a response and store data, let's change the loading state\n       .then(response => {\n         this.setState({\n           Breakfast: response.data.Desayunos,\n           isLoading: false\n         });\n       })\n       // If we catch any errors connecting, let's update accordingly\n       .catch(error => this.setState({ error, isLoading: false }));\n   }\n   // Let's our app know we're ready to render the data\n   componentDidMount() {\n     this.getBreakfast();\n   }\n   // Putting that data to use\n   render() {\n     const { isLoading, Breakfast } = this.state;\n     return (\n       <React.Fragment>\n         <h2>Random breakfast</h2>\n         <div>\n           {!isLoading ? (\n             Breakfast.map(breakfast => {\n               const { _id, name, price } = breakfast;\n               return (\n                 <div key={_id}>\n                   <h2>{name}</h2>\n                   <p>{price}</p>\n                   <hr />\n                 </div>\n               );\n             })\n           ) : (\n             <p>Loading...</p>\n           )}\n         </div>\n       </React.Fragment>\n     );\n   } */\n}\n\nexport default ComponentData;","map":{"version":3,"sources":["/home/laboratoriad043/Desktop/Laboratoria/Burger-Queen/burger-queen/src/menu/data.js"],"names":["React","Component","axios","url","ComponentData"],"mappings":"AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AAEA,MAAMC,GAAG,GAAG,0GAAZ;;AAEA,MAAMC,aAAN,SAA4BH,SAA5B,CAAsC;AACrC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AADqC;;AAqDtC,eAAeG,aAAf","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\nimport './menu.css';\n\nconst url = 'https://raw.githubuserprice.com/aleisabl/Burger-Queen/take-order/burger-queen/src/menu/burger-queen.json';\n\nclass ComponentData extends Component {\n /*  // State will apply to the Breakfast object which is set to loading by default\n  state = {\n    Breakfast: [],\n    isLoading: true,\n    errors: null\n  };\n  // Now we're going to make a request for data using axios\n  getBreakfast() {\n    axios\n      // This is where the data is hosted\n      .get(url)\n      // Once we get a response and store data, let's change the loading state\n      .then(response => {\n        this.setState({\n          Breakfast: response.data.Desayunos,\n          isLoading: false\n        });\n      })\n      // If we catch any errors connecting, let's update accordingly\n      .catch(error => this.setState({ error, isLoading: false }));\n  }\n  // Let's our app know we're ready to render the data\n  componentDidMount() {\n    this.getBreakfast();\n  }\n  // Putting that data to use\n  render() {\n    const { isLoading, Breakfast } = this.state;\n    return (\n      <React.Fragment>\n        <h2>Random breakfast</h2>\n        <div>\n          {!isLoading ? (\n            Breakfast.map(breakfast => {\n              const { _id, name, price } = breakfast;\n              return (\n                <div key={_id}>\n                  <h2>{name}</h2>\n                  <p>{price}</p>\n                  <hr />\n                </div>\n              );\n            })\n          ) : (\n            <p>Loading...</p>\n          )}\n        </div>\n      </React.Fragment>\n    );\n  } */\n}\n\nexport default ComponentData"]},"metadata":{},"sourceType":"module"}