{"ast":null,"code":"var _jsxFileName = \"/home/laboratoriad043/Desktop/Laboratoria/Burger-Queen/burger-queen/src/menu/data.js\";\nimport React, { Component } from 'react';\nimport './menu.css';\nconst url = 'https://raw.githubuserprice.com/aleisabl/Burger-Queen/take-order/burger-queen/src/menu/burger-queen.json';\n\nclass ComponentData extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      Breakfast: [],\n      isLoading: true,\n      errors: null\n    };\n    this.getBreakfast = this.getBreakfast.bind(this);\n  } // State will apply to the Breakfast object which is set to loading by default\n\n\n  // Now we're going to make a request for data using axios\n  getBreakfast() {\n    // This is where the data is hosted\n    fetch(url) // Once we get a response and store data, let's change the loading state\n    .then(response => {\n      this.setState({\n        Breakfast: response.data.Desayunos,\n        isLoading: false\n      });\n    }) // If we catch any errors connecting, let's update accordingly\n    .catch(error => this.setState({\n      error,\n      isLoading: false\n    }));\n  } // Let's our app know we're ready to render the data\n\n\n  componentDidMount() {\n    this.getBreakfast();\n  } // Putting that data to use\n\n\n  render() {\n    const _this$state = this.state,\n          isLoading = _this$state.isLoading,\n          Breakfast = _this$state.Breakfast;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, \"Random breakfast\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, !isLoading ? Breakfast.map(breakfast => {\n      const _id = breakfast._id,\n            name = breakfast.name,\n            price = breakfast.price;\n      return React.createElement(\"div\", {\n        key: _id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, name), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, price), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }));\n    }) : React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Loading...\")));\n  }\n\n}\n\nexport default ComponentData;","map":{"version":3,"sources":["/home/laboratoriad043/Desktop/Laboratoria/Burger-Queen/burger-queen/src/menu/data.js"],"names":["React","Component","url","ComponentData","constructor","props","state","Breakfast","isLoading","errors","getBreakfast","bind","fetch","then","response","setState","data","Desayunos","catch","error","componentDidMount","render","map","breakfast","_id","name","price"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,YAAP;AAEA,MAAMC,GAAG,GAAG,0GAAZ;;AAEA,MAAMC,aAAN,SAA4BF,SAA5B,CAAsC;AAEpCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SAMnBC,KANmB,GAMX;AACNC,MAAAA,SAAS,EAAE,EADL;AAENC,MAAAA,SAAS,EAAE,IAFL;AAGNC,MAAAA,MAAM,EAAE;AAHF,KANW;AAEjB,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACD,GALmC,CAOrC;;;AAMC;AACAD,EAAAA,YAAY,GAAG;AACP;AACJE,IAAAA,KAAK,CAACV,GAAD,CAAL,CACA;AADA,KAECW,IAFD,CAEMC,QAAQ,IAAI;AAChB,WAAKC,QAAL,CAAc;AACZR,QAAAA,SAAS,EAAEO,QAAQ,CAACE,IAAT,CAAcC,SADb;AAEZT,QAAAA,SAAS,EAAE;AAFC,OAAd;AAID,KAPD,EAQA;AARA,KASCU,KATD,CASOC,KAAK,IAAI,KAAKJ,QAAL,CAAc;AAAEI,MAAAA,KAAF;AAASX,MAAAA,SAAS,EAAE;AAApB,KAAd,CAThB;AAUH,GA1BmC,CA2BpC;;;AACAY,EAAAA,iBAAiB,GAAG;AAClB,SAAKV,YAAL;AACD,GA9BmC,CA+BpC;;;AACAW,EAAAA,MAAM,GAAG;AAAA,wBAC0B,KAAKf,KAD/B;AAAA,UACCE,SADD,eACCA,SADD;AAAA,UACYD,SADZ,eACYA,SADZ;AAEP,WACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAACC,SAAD,GACCD,SAAS,CAACe,GAAV,CAAcC,SAAS,IAAI;AAAA,YACjBC,GADiB,GACID,SADJ,CACjBC,GADiB;AAAA,YACZC,IADY,GACIF,SADJ,CACZE,IADY;AAAA,YACNC,KADM,GACIH,SADJ,CACNG,KADM;AAEzB,aACE;AAAK,QAAA,GAAG,EAAEF,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKC,IAAL,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIC,KAAJ,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,CADF;AAOD,KATD,CADD,GAYC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAbJ,CAFF,CADF;AAqBD;;AAvDmC;;AA0DtC,eAAevB,aAAf","sourcesContent":["import React, {Component} from 'react';\nimport './menu.css';\n\nconst url = 'https://raw.githubuserprice.com/aleisabl/Burger-Queen/take-order/burger-queen/src/menu/burger-queen.json';\n\nclass ComponentData extends Component {\n\n  constructor(props) {\n    super(props);\n    this.getBreakfast = this.getBreakfast.bind(this);\n  }\n\n // State will apply to the Breakfast object which is set to loading by default\n  state = {\n    Breakfast: [],\n    isLoading: true,\n    errors: null\n  };\n  // Now we're going to make a request for data using axios\n  getBreakfast() {\n          // This is where the data is hosted\n      fetch(url)\n      // Once we get a response and store data, let's change the loading state\n      .then(response => {\n        this.setState({\n          Breakfast: response.data.Desayunos,\n          isLoading: false\n        });\n      })\n      // If we catch any errors connecting, let's update accordingly\n      .catch(error => this.setState({ error, isLoading: false }));\n  }\n  // Let's our app know we're ready to render the data\n  componentDidMount() {\n    this.getBreakfast();\n  }\n  // Putting that data to use\n  render() {\n    const { isLoading, Breakfast } = this.state;\n    return (\n      <React.Fragment>\n        <h2>Random breakfast</h2>\n        <div>\n          {!isLoading ? (\n            Breakfast.map(breakfast => {\n              const { _id, name, price } = breakfast;\n              return (\n                <div key={_id}>\n                  <h2>{name}</h2>\n                  <p>{price}</p>\n                  <hr />\n                </div>\n              );\n            })\n          ) : (\n            <p>Loading...</p>\n          )}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default ComponentData"]},"metadata":{},"sourceType":"module"}