{"ast":null,"code":"var _jsxFileName = \"/home/laboratoriad043/Desktop/Laboratoria/Burger-Queen/burger-queen/src/menu/data.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport './menu.css';\nconst url = 'https://raw.githubusercontent.com/aleisabl/Burger-Queen/take-order/burger-queen/src/menu/burger-queen.json';\nconst api = axios.create({\n  baseURL: \"https://raw.githubusercontent.com/aleisabl/Burger-Queen/take-order/burger-queen/src/menu/burger-queen.json\"\n});\n\nclass ComponentData extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      Data: [],\n      isLoading: true,\n      errors: null\n    };\n  }\n\n  // Now we're going to make a request for data using axios\n  getData() {\n    axios // This is where the data is hosted\n    .get(\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/3/Data.json\") // Once we get a response and store data, let's change the loading state\n    .then(response => {\n      this.setState({\n        Data: response.data.Data,\n        isLoading: false\n      });\n    }) // If we catch any errors connecting, let's update accordingly\n    .catch(error => this.setState({\n      error,\n      isLoading: false\n    }));\n  } // Let's our app know we're ready to render the data\n\n\n  componentDidMount() {\n    this.getData();\n  } // Putting that data to use\n\n\n  render() {\n    const _this$state = this.state,\n          isLoading = _this$state.isLoading,\n          Data = _this$state.Data;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Men\\xFA de Desayunos\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, !isLoading ? Data.map(items => {\n      const _id = items._id,\n            title = items.title,\n            content = items.content;\n      return React.createElement(\"div\", {\n        key: _id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, title), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, content), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }));\n    }) : React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"Loading...\")));\n  }\n\n}\n\nexport default ComponentData;","map":{"version":3,"sources":["/home/laboratoriad043/Desktop/Laboratoria/Burger-Queen/burger-queen/src/menu/data.js"],"names":["React","Component","axios","url","api","create","baseURL","ComponentData","state","Data","isLoading","errors","getData","get","then","response","setState","data","catch","error","componentDidMount","render","map","items","_id","title","content"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AAEA,MAAMC,GAAG,GAAG,4GAAZ;AACA,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAN,CAAa;AACvBC,EAAAA,OAAO,EAAE;AADc,CAAb,CAAZ;;AAIA,MAAMC,aAAN,SAA4BN,SAA5B,CAAsC;AAAA;AAAA;AAAA,SAEpCO,KAFoC,GAE5B;AACNC,MAAAA,IAAI,EAAE,EADA;AAENC,MAAAA,SAAS,EAAE,IAFL;AAGNC,MAAAA,MAAM,EAAE;AAHF,KAF4B;AAAA;;AAOpC;AACAC,EAAAA,OAAO,GAAG;AACRV,IAAAA,KAAK,CACH;AADG,KAEFW,GAFH,CAEO,0DAFP,EAGE;AAHF,KAIGC,IAJH,CAIQC,QAAQ,IAAI;AAChB,WAAKC,QAAL,CAAc;AACZP,QAAAA,IAAI,EAAEM,QAAQ,CAACE,IAAT,CAAcR,IADR;AAEZC,QAAAA,SAAS,EAAE;AAFC,OAAd;AAID,KATH,EAUE;AAVF,KAWGQ,KAXH,CAWSC,KAAK,IAAI,KAAKH,QAAL,CAAc;AAAEG,MAAAA,KAAF;AAAST,MAAAA,SAAS,EAAE;AAApB,KAAd,CAXlB;AAYD,GArBmC,CAsBpC;;;AACAU,EAAAA,iBAAiB,GAAG;AAClB,SAAKR,OAAL;AACD,GAzBmC,CA0BpC;;;AACAS,EAAAA,MAAM,GAAG;AAAA,wBACqB,KAAKb,KAD1B;AAAA,UACCE,SADD,eACCA,SADD;AAAA,UACYD,IADZ,eACYA,IADZ;AAEP,WACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAACC,SAAD,GACCD,IAAI,CAACa,GAAL,CAASC,KAAK,IAAI;AAAA,YACRC,GADQ,GACgBD,KADhB,CACRC,GADQ;AAAA,YACHC,KADG,GACgBF,KADhB,CACHE,KADG;AAAA,YACIC,OADJ,GACgBH,KADhB,CACIG,OADJ;AAEhB,aACE;AAAK,QAAA,GAAG,EAAEF,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKC,KAAL,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAIC,OAAJ,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,CADF;AAOD,KATD,CADD,GAYC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAbJ,CAFF,CADF;AAqBD;;AAlDmC;;AAqDtC,eAAenB,aAAf","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\nimport './menu.css';\n\nconst url = 'https://raw.githubusercontent.com/aleisabl/Burger-Queen/take-order/burger-queen/src/menu/burger-queen.json';\nconst api = axios.create({\n  baseURL: \"https://raw.githubusercontent.com/aleisabl/Burger-Queen/take-order/burger-queen/src/menu/burger-queen.json\"\n});\n\nclass ComponentData extends Component {\n  // State will apply to the Data object which is set to loading by default\n  state = {\n    Data: [],\n    isLoading: true,\n    errors: null\n  };\n  // Now we're going to make a request for data using axios\n  getData() {\n    axios\n      // This is where the data is hosted\n      .get(\"https://s3-us-west-2.amazonaws.com/s.cdpn.io/3/Data.json\")\n      // Once we get a response and store data, let's change the loading state\n      .then(response => {\n        this.setState({\n          Data: response.data.Data,\n          isLoading: false\n        });\n      })\n      // If we catch any errors connecting, let's update accordingly\n      .catch(error => this.setState({ error, isLoading: false }));\n  }\n  // Let's our app know we're ready to render the data\n  componentDidMount() {\n    this.getData();\n  }\n  // Putting that data to use\n  render() {\n    const { isLoading, Data } = this.state;\n    return (\n      <React.Fragment>\n        <h2>Men√∫ de Desayunos</h2>\n        <div>\n          {!isLoading ? (\n            Data.map(items => {\n              const { _id, title, content } = items;\n              return (\n                <div key={_id}>\n                  <h2>{title}</h2>\n                  <p>{content}</p>\n                  <hr />\n                </div>\n              );\n            })\n          ) : (\n            <p>Loading...</p>\n          )}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default ComponentData"]},"metadata":{},"sourceType":"module"}