{"ast":null,"code":"var _jsxFileName = \"/home/laboratoriad043/Desktop/Laboratoria/Burger-Queen/burger-queen/src/menu/lunch.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport './menu.css';\nconst url = 'https://raw.githubusercontent.com/aleisabl/Burger-Queen/take-order/burger-queen/src/menu/burger-queen.json';\n\nclass ComponentLunch extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      Lunch: [],\n      isLoading: true,\n      errors: null\n    };\n  }\n\n  // Now we're going to make a request for data using axios\n  getLunch() {\n    axios // This is where the data is hosted\n    .get(url) // Once we get a response and store data, let's change the loading state\n    .then(response => {\n      this.setState({\n        Lunch: response.data.Hamburguesas,\n        isLoading: false\n      });\n    }) // If we catch any errors connecting, let's update accordingly\n    .catch(error => this.setState({\n      error,\n      isLoading: false\n    }));\n  } // Let's our app know we're ready to render the data\n\n\n  componentDidMount() {\n    this.getLunch();\n  } // Putting that data to use\n\n\n  render() {\n    const _this$state = this.state,\n          isLoading = _this$state.isLoading,\n          Lunch = _this$state.Lunch;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, !isLoading ? Lunch.map(lunch => {\n      const _id = lunch._id,\n            name = lunch.name,\n            price = lunch.price,\n            type = lunch.type;\n      return React.createElement(\"div\", {\n        key: _id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"h6\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, name), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"precio: $\", price), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"tipo: \", type), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }));\n    }) : React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Loading...\")));\n  }\n\n}\n\nexport default ComponentLunch;","map":{"version":3,"sources":["/home/laboratoriad043/Desktop/Laboratoria/Burger-Queen/burger-queen/src/menu/lunch.js"],"names":["React","Component","axios","url","ComponentLunch","state","Lunch","isLoading","errors","getLunch","get","then","response","setState","data","Hamburguesas","catch","error","componentDidMount","render","map","lunch","_id","name","price","type"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AAEA,MAAMC,GAAG,GAAG,4GAAZ;;AAEA,MAAMC,cAAN,SAA6BH,SAA7B,CAAuC;AAAA;AAAA;AAAA,SAErCI,KAFqC,GAE7B;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,SAAS,EAAE,IAFL;AAGNC,MAAAA,MAAM,EAAE;AAHF,KAF6B;AAAA;;AAOrC;AACAC,EAAAA,QAAQ,GAAG;AACTP,IAAAA,KAAK,CACH;AADG,KAEFQ,GAFH,CAEOP,GAFP,EAGE;AAHF,KAIGQ,IAJH,CAIQC,QAAQ,IAAI;AAChB,WAAKC,QAAL,CAAc;AACZP,QAAAA,KAAK,EAAEM,QAAQ,CAACE,IAAT,CAAcC,YADT;AAEZR,QAAAA,SAAS,EAAE;AAFC,OAAd;AAID,KATH,EAUE;AAVF,KAWGS,KAXH,CAWSC,KAAK,IAAI,KAAKJ,QAAL,CAAc;AAAEI,MAAAA,KAAF;AAASV,MAAAA,SAAS,EAAE;AAApB,KAAd,CAXlB;AAYD,GArBoC,CAsBrC;;;AACAW,EAAAA,iBAAiB,GAAG;AAClB,SAAKT,QAAL;AACD,GAzBoC,CA0BrC;;;AACAU,EAAAA,MAAM,GAAG;AAAA,wBACsB,KAAKd,KAD3B;AAAA,UACCE,SADD,eACCA,SADD;AAAA,UACYD,KADZ,eACYA,KADZ;AAEP,WACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAACC,SAAD,GACCD,KAAK,CAACc,GAAN,CAAUC,KAAK,IAAI;AAAA,YACTC,GADS,GACkBD,KADlB,CACTC,GADS;AAAA,YACJC,IADI,GACkBF,KADlB,CACJE,IADI;AAAA,YACEC,KADF,GACkBH,KADlB,CACEG,KADF;AAAA,YACSC,IADT,GACkBJ,KADlB,CACSI,IADT;AAEjB,aACE;AAAK,QAAA,GAAG,EAAEH,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKC,IAAL,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAaC,KAAb,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAUC,IAAV,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,CADF;AAQD,KAVD,CADD,GAaC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAdJ,CADF,CADF;AAqBD;;AAlDoC;;AAqDvC,eAAerB,cAAf","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\nimport './menu.css';\n\nconst url = 'https://raw.githubusercontent.com/aleisabl/Burger-Queen/take-order/burger-queen/src/menu/burger-queen.json';\n\nclass ComponentLunch extends Component {\n // State will apply to the Lunch object which is set to loading by default\n  state = {\n    Lunch: [],\n    isLoading: true,\n    errors: null\n  };\n  // Now we're going to make a request for data using axios\n  getLunch() {\n    axios\n      // This is where the data is hosted\n      .get(url)\n      // Once we get a response and store data, let's change the loading state\n      .then(response => {\n        this.setState({\n          Lunch: response.data.Hamburguesas,\n          isLoading: false\n        });\n      })\n      // If we catch any errors connecting, let's update accordingly\n      .catch(error => this.setState({ error, isLoading: false }));\n  }\n  // Let's our app know we're ready to render the data\n  componentDidMount() {\n    this.getLunch();\n  }\n  // Putting that data to use\n  render() {\n    const { isLoading, Lunch } = this.state;\n    return (\n      <React.Fragment>\n        <div>\n          {!isLoading ? (\n            Lunch.map(lunch => {\n              const { _id, name, price, type } = lunch;\n              return (\n                <div key={_id}>\n                  <h6>{name}</h6>\n                  <p>precio: ${price}</p>\n                  <p>tipo: {type}</p>\n                  <hr />\n                </div>\n              );\n            })\n          ) : (\n            <p>Loading...</p>\n          )}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default ComponentLunch"]},"metadata":{},"sourceType":"module"}