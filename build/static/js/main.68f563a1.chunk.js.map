{"version":3,"sources":["home/burger-queen-logo.jpg","menu/breakfast.js","menu/lunch.js","menu/nameForm.js","menu/buttons.js","home/logo.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","ComponentBreakfast","state","Breakfast","isLoading","errors","_this2","this","axios","get","then","response","setState","data","Desayunos","catch","error","getBreakfast","_this$state","react_default","a","createElement","map","breakfast","_id","name","price","img","className","key","href","src","alt","width","Component","ComponentLunch","Lunch","SideDish","Beverage","Hamburguesas","Acompañamientos","Bebidas","getLunch","lunch","type","extras","id","value","aria-label","sidedish","beverage","ComponentNameForm","props","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","bind","assertThisInitialized","handleSubmit","event","target","alert","preventDefault","onSubmit","onChange","ComponentButtons","isToggleOn","handleClick","prevState","Fragment","onClick","menu_breakfast","menu_lunch","nameForm","ComponentHome","logo","App","buttons","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.68f563a1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/burger-queen-logo.cdc0f111.jpg\";","import React, {Component} from 'react';\nimport axios from 'axios';\nimport './menu.css';\n\nconst url = 'https://raw.githubusercontent.com/aleisabl/Burger-Queen/master/src/menu/burger-queen.json';\n\nclass ComponentBreakfast extends Component {\n // State will apply to the Breakfast object which is set to loading by default\n  state = {\n    Breakfast: [],\n    isLoading: true,\n    errors: null\n  };\n  // Now we're going to make a request for data using axios\n  getBreakfast() {\n    axios\n      // This is where the data is hosted\n      .get(url)\n      // Once we get a response and store data, let's change the loading state\n      .then(response => {\n        this.setState({\n          Breakfast: response.data.Desayunos,\n          isLoading: false\n        });\n      })\n      // If we catch any errors connecting, let's update accordingly\n      .catch(error => this.setState({ error, isLoading: false }));\n  }\n  // Let's our app know we're ready to render the data\n  componentDidMount() {\n    this.getBreakfast();\n  }\n\n  // Putting that data to use\n  render() {\n    const { isLoading, Breakfast } = this.state;\n    return (\n        <div>\n          {!isLoading ? (\n            Breakfast.map(breakfast => {\n              const { _id, name, price, img } = breakfast;\n              return (\n                <div className=\"breakfast-div\" key={_id}>\n                  <h6>{name}</h6>\n                  <p>precio: ${price}</p>\n                <a href=\"#\"> <img /* onClick={addOne()} */ src={img} alt=\"icon\" width=\"22px\"></img> </a> -\n                  <hr />\n                </div>\n              );\n            })\n          ) : (\n            <p>Loading...</p>\n          )}\n        </div>\n    );\n  }\n}\n\nexport default ComponentBreakfast","import React, {Component} from 'react';\nimport axios from 'axios';\nimport './menu.css';\n\n\nconst url = 'https://raw.githubusercontent.com/aleisabl/Burger-Queen/master/src/menu/burger-queen.json';\n\nclass ComponentLunch extends Component {\n // State will apply to the Lunch object which is set to loading by default\n  state = {\n    Lunch: [],\n    SideDish: [],\n    Beverage: [],\n    isLoading: true,\n    errors: null\n  };\n  // Now we're going to make a request for data using axios\n  getLunch() {\n    axios\n      // This is where the data is hosted\n      .get(url)\n      // Once we get a response and store data, let's change the loading state\n      .then(response => {\n        this.setState({\n          Lunch: response.data.Hamburguesas,\n          SideDish: response.data.Acompañamientos,\n          Beverage : response.data.Bebidas,\n          isLoading: false\n        });\n      })\n      // If we catch any errors connecting, let's update accordingly\n      .catch(error => this.setState({ error, isLoading: false }));\n  }\n  // Let's our app know we're ready to render the data\n  componentDidMount() {\n    this.getLunch();\n  }\n\n  // Putting that data to use\n  render() {\n    const { isLoading, Lunch, SideDish, Beverage } = this.state;\n    return (\n        <div className=\"lunch-div\">\n          {!isLoading ? (\n            Lunch.map(lunch => {\n              const { _id, name, price, type, img, extras } = lunch;\n              return (\n                <div key={_id}>\n                  <h6>{name}</h6>\n                  <p>Precio: ${price}</p>\n                  <h6>Tipos de carne:</h6>\n                  <b>{type[0]}</b><input className=\"form-check-input \" type=\"checkbox\" id=\"blankCheckbox\" value=\"option1\" aria-label=\"...\"></input>\n                  <br></br>\n                  <b>{type[1]}</b><input className=\"form-check-input \" type=\"checkbox\" id=\"blankCheckbox\" value=\"option2\" aria-label=\"...\"></input>\n                  <br></br>\n                  <b>{type[2]}</b><input className=\"form-check-input \" type=\"checkbox\" id=\"blankCheckbox\" value=\"option3\" aria-label=\"...\"></input>  \n                  <br></br> <br></br>\n                  <h6>Extras:</h6>\n                  <p> <b>{extras[0]}</b> ${extras[1]} <input className=\"form-check-input \" type=\"checkbox\" id=\"blankCheckbox\" value=\"option4\" aria-label=\"...\"></input>\n                   <br></br>\n                  <b>{extras[2]}</b> ${extras[3]} <input className=\"form-check-input \" type=\"checkbox\" id=\"blankCheckbox\" value=\"option5\" aria-label=\"...\"></input> </p>\n                  <a href=\"#\"> <img src={img} alt=\"icon\" width=\"22px\"></img> </a>\n                  <hr />\n                </div>\n              );\n            })\n\n          ) : (\n            <p>Loading...</p>\n          )}\n\n             { SideDish.map(sidedish => {\n              const { _id, name, price, img } = sidedish;\n              return (\n                <div key={_id}>\n                  <h6>{name}</h6>\n                  <p>precio: ${price}</p>\n                  <a href=\"#\"> <img src={img} alt=\"icon\" width=\"22px\"></img> </a>\n                  <hr />\n                </div>\n              );\n            })}\n\n              { Beverage.map(beverage => {\n              const { _id, name, price, img } = beverage;\n              return (\n                <div key={_id}>\n                  <h6>{name}</h6>\n                  <p>precio: ${price}</p>\n                  <a href=\"#\"> <img src={img} alt=\"icon\" width=\"22px\"></img> </a>\n                  <hr />\n                </div>\n              );\n            })}\n\n            \n\n        </div>\n    );\n  }\n}\n\nexport default ComponentLunch","import React, {Component} from 'react';\nimport './menu.css';\n\nclass ComponentNameForm extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {value: ''};\n  \n      this.handleChange = this.handleChange.bind(this);\n      this.handleSubmit = this.handleSubmit.bind(this);\n    }\n  \n    handleChange(event) {\n      this.setState({value: event.target.value});\n    }\n  \n    handleSubmit(event) {\n      alert('Mesa de ' + this.state.value + ' enviada a cocina exitosamente');\n      event.preventDefault();\n    }\n  \n    render() {\n      return (\n\n      /*   <form className=\"nameForm\" onSubmit={this.handleSubmit}>\n  <div class=\"form-row\">\n    <div class=\"col\">\n      <input type=\"text\" value={this.state.value} onChange={this.handleChange}class=\"form-control\" placeholder=\"First name\">\n    </div>\n  </div>\n</form> */\n\n        <form onSubmit={this.handleSubmit}>\n          <label className=\"nameForm\">\n          <h6> Nombre del cliente: </h6> \n            <input type=\"text\" className=\"form-control\"  value={this.state.value} onChange={this.handleChange} />\n          </label>\n          <label className=\"tableForm\">\n          <h6>Productos: </h6>\n          <p></p>\n          </label>\n          \n          <input className=\"btn btn-outline-info btn3\" type=\"submit\" value=\"Enviar\" />\n        </form>\n      );\n    }\n  }\n\n  export default ComponentNameForm;","import React, {Component} from 'react';\nimport './menu.css';\nimport ComponentBreakfast from './breakfast.js'\nimport ComponentLunch from './lunch.js'\nimport ComponentNameForm from './nameForm.js'\n\nclass ComponentButtons extends Component {\n\n      constructor(props) {\n        super(props);\n        this.state = {isToggleOn: true};\n    \n        // This binding is necessary to make `this` work in the callback\n        this.handleClick = this.handleClick.bind(this);\n      }\n    \n      handleClick() {\n        this.setState(prevState => ({\n          isToggleOn: !prevState.isToggleOn\n        }));\n      }\n      \n\n    render() {\n      return (\n\n        <React.Fragment>\n\n        <div className=\"rectangle\">\n        <button type=\"button\" onClick={this.handleClick} className=\"btn btn-outline-info one\">Menú</button> \n        <button type=\"button\" onClick={this.handleClick} id=\"btn2\" className=\"btn btn-outline-info\">Cocina</button>\n        </div>\n\n        <div className=\"rectangle2\">\n        {this.state.isToggleOn ? <ComponentBreakfast/> : null}\n        {this.state.isToggleOn ? <ComponentLunch/> : null}\n        </div>     \n\n        <div className=\"rectangle3\">\n        <ComponentNameForm/>\n       {/*  <form>\n              <label>\n                Nombre:\n                <input type=\"text\" name=\"name\" />\n              </label>\n              <input type=\"submit\" value=\"Submit\" />\n            </form> */}\n        </div> \n\n        </React.Fragment>\n      );\n    }\n  }\n  \n\n\n\n\n\nexport default ComponentButtons;","import React, {Component} from 'react';\nimport logo from './burger-queen-logo.jpg';\nimport './home.css';\n\nclass ComponentHome extends Component{\n    render(){\n        return (\n    <div className=\"row\">\n    <div className=\"logo\">\n        <img alt=\"logo\" className=\"logo\" src={logo} />\n    </div>\n    </div>    \n        );\n    }\n}    \n\nexport default ComponentHome;","import React, {Component} from 'react';\nimport ComponentButtons from './menu/buttons.js'\nimport ComponentLogo from './home/logo.js'\nimport './App.css';\n\nclass App extends Component {\n  render(){\n      return (  \n        <React.Fragment>\n              <ComponentLogo/>\n              <ComponentButtons/>    \n        </React.Fragment>\n      );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"bootstrap/dist/css/bootstrap.css\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}